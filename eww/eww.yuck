(defwidget bar-widget []
  (box :orientation "h" :class "bar-widget"
       (environment-info)
       (system-info)))

(defwidget environment-info []
  (box :orientation "h" :space-evenly false :halign "start"
    (box :class "timespace" time)
    (box :class "infospace" wetstat)
    ))

(defwidget system-info []
  (box :orientation "h" :space-evenly false :halign "end"
    (metric :label "battery"
            :value {EWW_BATTERY.BAT0.capacity}
            :onchange "")
    (metric :label "cpu"
            :value {EWW_CPU.avg}
            :onchange "")
    (metric :label "mem"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "disk"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    (box :class "infospace" batstat)
    (box :class "infospace" wifistat)
    ))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)
    (box :class "textspec" :space-evenly false
      {round(value, 0)} "%")
      ))

(defpoll time :interval "1s"
	 "date") ; '+%Y/%b/%d time: %H:%M:%S'

(defpoll wifistat :interval "10s"
  "nmcli -f IN-USE,SSID,BARS,SIGNAL dev wifi | grep '*' | awk '{$1=$1};1'")

(defpoll batstat :interval "2s"
   "acpi -i | head -n 1 | cut -c 1-40")

(defpoll wetstat :interval "600s"
   "curl -s 'wttr.in/Tokyo?format=%c+%t+%w+%h'")

(defwindow bar
  :monitor 0
  :exclusive true
  :geometry (geometry :height "50px" :anchor "bottom center")
  :windowtype "dock"
  :stacking "fg"
  (bar-widget))
